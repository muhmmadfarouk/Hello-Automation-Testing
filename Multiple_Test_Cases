import unittest
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
import HtmlTestRunner
from selenium.webdriver.common.action_chains import ActionChains

# test data
user = "admin"  # variable of username in login page
password = "admin"  # variable of password in login page
# the data will used in create user (username)
un = ["BAYER",".","44543","8*&*&","أتاري","asd213"," admin","Karim Ahmed","kar212*&&*"]
pwd = "1234567"  # the data will used in create user (Password)
mails = "Bayer@testingrdi.com"  # the data will used in create user (mail)
maxun="uuqdhqhqwhdohqodhsondosqdnoqhdoshdoihqsdhoqsihdoishdoihqsoidhsiohdioshdoihsdoihsqiodhsodioshdoshdoihqsdhsssdsqhd"
pwd_space="     "
minpwd="1"
invalidmail="sdsad@sdsda@sdads"

class Create_User(unittest.TestCase):  # create the test case
    def setUp(self):  # Test fixture, This is t.est preparation task, to start the test
        self.driver = webdriver.Chrome()  # create a new chrome session
        self.driver.implicitly_wait(2)  # wait for 2 seconds
        self.driver.maximize_window()  # maximize the window
        self.driver.get("http://35.185.110.72/#/login")  # navigate to the website login page


    def test_Happy_Case(self):
        self.type_user = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-0"]')  # find the username field in login Page
        self.type_user.send_keys(user)  # write the username
        self.type_password = self.driver.find_element_by_xpath(
            '//*[@id="password"]')  # find the Password field in login Page
        self.type_password.send_keys(password)  # write your data in password button
        self.type_password.send_keys(Keys.RETURN)  # click Enter to login
        # find all Users Page
        self.all_users = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[1]/div[2]/span')
        self.all_users.click()  # click on the all users button
        # find create user page
        self.create_user = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[2]/button[2]')
        self.create_user.click()  # click on create user button
        # find the username field in create user Page
        self.type_username = self.driver.find_element_by_xpath('//*[@id="mat-input-5"]')
        self.type_username.send_keys(un[0])  # write the data of username in create user page
        self.type_pwd = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-6"]')  # find the password field in create user Page
        self.type_pwd.send_keys(pwd)  # write the data of password in create user page
        self.type_mail = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-7"]')  # find the mails field in create user Page
        self.type_mail.send_keys(mails)  # write the data of mails in create user page
        # find the checkbox of Role of the user you want to create inc create user page
        self.checkbox = self.driver.find_element_by_xpath('//*[@id="mat-radio-5"]/label')
        self.checkbox.click()  # click on the role you select
        self.type_mail.send_keys(Keys.RETURN)  # click enter to create the user
        # if condition to make sure from creating user by finding the pop up of succeeding creation of user
        try:
            if self.driver.find_element_by_xpath('//*[@id="Ellipse_1"]').is_displayed():
                print("success")
        except:
            print("fails")

    def test_username_dot(self):
        self.type_user = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-0"]')  # find the username field in login Page
        self.type_user.send_keys(user)  # write the username
        self.type_password = self.driver.find_element_by_xpath(
            '//*[@id="password"]')  # find the Password field in login Page
        self.type_password.send_keys(password)  # write your data in password button
        self.type_password.send_keys(Keys.RETURN)  # click Enter to login
        # find all Users Page
        self.all_users = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[1]/div[2]/span')
        self.all_users.click()  # click on the all users button
        # find create user page
        self.create_user = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[2]/button[2]')
        self.create_user.click()  # click on create user button
        # find the username field in create user Page
        self.type_username = self.driver.find_element_by_xpath('//*[@id="mat-input-5"]')
        self.type_username.send_keys(un[1])  # write the data of username in create user page
        self.type_pwd = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-6"]')  # find the password field in create user Page
        self.type_pwd.send_keys(pwd)  # write the data of password in create user page
        self.type_mail = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-7"]')  # find the mails field in create user Page
        self.type_mail.send_keys(mails)  # write the data of mails in create user page
        # find the checkbox of Role of the user you want to create inc create user page
        self.checkbox = self.driver.find_element_by_xpath('//*[@id="mat-radio-5"]/label')
        self.checkbox.click()  # click on the role you select
        self.type_mail.send_keys(Keys.RETURN)  # click enter to create the user
        # if condition to make sure from creating user by finding the pop up of succeeding creation of user
        try:
            if self.driver.find_element_by_xpath('//*[@id="Ellipse_1"]').is_displayed():
                print("success")
        except:
            print("fails")

    def test_username_numbers(self):
        self.type_user = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-0"]')  # find the username field in login Page
        self.type_user.send_keys(user)  # write the username
        self.type_password = self.driver.find_element_by_xpath(
            '//*[@id="password"]')  # find the Password field in login Page
        self.type_password.send_keys(password)  # write your data in password button
        self.type_password.send_keys(Keys.RETURN)  # click Enter to login
        # find all Users Page
        self.all_users = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[1]/div[2]/span')
        self.all_users.click()  # click on the all users button
        # find create user page
        self.create_user = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[2]/button[2]')
        self.create_user.click()  # click on create user button
        # find the username field in create user Page
        self.type_username = self.driver.find_element_by_xpath('//*[@id="mat-input-5"]')
        self.type_username.send_keys(un[2])  # write the data of username in create user page
        self.type_pwd = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-6"]')  # find the password field in create user Page
        self.type_pwd.send_keys(pwd)  # write the data of password in create user page
        self.type_mail = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-7"]')  # find the mails field in create user Page
        self.type_mail.send_keys(mails)  # write the data of mails in create user page
        # find the checkbox of Role of the user you want to create inc create user page
        self.checkbox = self.driver.find_element_by_xpath('//*[@id="mat-radio-5"]/label')
        self.checkbox.click()  # click on the role you select
        self.type_mail.send_keys(Keys.RETURN)  # click enter to create the user
        # if condition to make sure from creating user by finding the pop up of succeeding creation of user
        try:
            if self.driver.find_element_by_xpath('//*[@id="Ellipse_1"]').is_displayed():
                print("success")
        except:
            print("fails")

    def test_username_symbols(self):
        self.type_user = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-0"]')  # find the username field in login Page
        self.type_user.send_keys(user)  # write the username
        self.type_password = self.driver.find_element_by_xpath(
            '//*[@id="password"]')  # find the Password field in login Page
        self.type_password.send_keys(password)  # write your data in password button
        self.type_password.send_keys(Keys.RETURN)  # click Enter to login
        # find all Users Page
        self.all_users = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[1]/div[2]/span')
        self.all_users.click()  # click on the all users button
        # find create user page
        self.create_user = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[2]/button[2]')
        self.create_user.click()  # click on create user button
        # find the username field in create user Page
        self.type_username = self.driver.find_element_by_xpath('//*[@id="mat-input-5"]')
        self.type_username.send_keys(un[3])  # write the data of username in create user page
        self.type_pwd = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-6"]')  # find the password field in create user Page
        self.type_pwd.send_keys(pwd)  # write the data of password in create user page
        self.type_mail = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-7"]')  # find the mails field in create user Page
        self.type_mail.send_keys(mails)  # write the data of mails in create user page
        # find the checkbox of Role of the user you want to create inc create user page
        self.checkbox = self.driver.find_element_by_xpath('//*[@id="mat-radio-5"]/label')
        self.checkbox.click()  # click on the role you select
        self.type_mail.send_keys(Keys.RETURN)  # click enter to create the user
        # if condition to make sure from creating user by finding the pop up of succeeding creation of user
        try:
            if self.driver.find_element_by_xpath('//*[@id="Ellipse_1"]').is_displayed():
                print("success")
        except:
            print("fails")

    def test_username_Arabic(self):
        self.type_user = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-0"]')  # find the username field in login Page
        self.type_user.send_keys(user)  # write the username
        self.type_password = self.driver.find_element_by_xpath(
            '//*[@id="password"]')  # find the Password field in login Page
        self.type_password.send_keys(password)  # write your data in password button
        self.type_password.send_keys(Keys.RETURN)  # click Enter to login
        # find all Users Page
        self.all_users = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[1]/div[2]/span')
        self.all_users.click()  # click on the all users button
        # find create user page
        self.create_user = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[2]/button[2]')
        self.create_user.click()  # click on create user button
        # find the username field in create user Page
        self.type_username = self.driver.find_element_by_xpath('//*[@id="mat-input-5"]')
        self.type_username.send_keys(un[4])  # write the data of username in create user page
        self.type_pwd = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-6"]')  # find the password field in create user Page
        self.type_pwd.send_keys(pwd)  # write the data of password in create user page
        self.type_mail = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-7"]')  # find the mails field in create user Page
        self.type_mail.send_keys(mails)  # write the data of mails in create user page
        # find the checkbox of Role of the user you want to create inc create user page
        self.checkbox = self.driver.find_element_by_xpath('//*[@id="mat-radio-5"]/label')
        self.checkbox.click()  # click on the role you select
        self.type_mail.send_keys(Keys.RETURN)  # click enter to create the user
        # if condition to make sure from creating user by finding the pop up of succeeding creation of user
        try:
            if self.driver.find_element_by_xpath('//*[@id="Ellipse_1"]').is_displayed():
                print("success")
        except:
            print("fails")

    def test_username_digits_letters(self):
        self.type_user = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-0"]')  # find the username field in login Page
        self.type_user.send_keys(user)  # write the username
        self.type_password = self.driver.find_element_by_xpath(
            '//*[@id="password"]')  # find the Password field in login Page
        self.type_password.send_keys(password)  # write your data in password button
        self.type_password.send_keys(Keys.RETURN)  # click Enter to login
        # find all Users Page
        self.all_users = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[1]/div[2]/span')
        self.all_users.click()  # click on the all users button
        # find create user page
        self.create_user = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[2]/button[2]')
        self.create_user.click()  # click on create user button
        # find the username field in create user Page
        self.type_username = self.driver.find_element_by_xpath('//*[@id="mat-input-5"]')
        self.type_username.send_keys(un[5])  # write the data of username in create user page
        self.type_pwd = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-6"]')  # find the password field in create user Page
        self.type_pwd.send_keys(pwd)  # write the data of password in create user page
        self.type_mail = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-7"]')  # find the mails field in create user Page
        self.type_mail.send_keys(mails)  # write the data of mails in create user page
        # find the checkbox of Role of the user you want to create inc create user page
        self.checkbox = self.driver.find_element_by_xpath('//*[@id="mat-radio-5"]/label')
        self.checkbox.click()  # click on the role you select
        self.type_mail.send_keys(Keys.RETURN)  # click enter to create the user
        # if condition to make sure from creating user by finding the pop up of succeeding creation of user
        try:
            if self.driver.find_element_by_xpath('//*[@id="Ellipse_1"]').is_displayed():
                print("success")
        except:
            print("fails")

    def test_sameusername_space(self):
        self.type_user = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-0"]')  # find the username field in login Page
        self.type_user.send_keys(user)  # write the username
        self.type_password = self.driver.find_element_by_xpath(
            '//*[@id="password"]')  # find the Password field in login Page
        self.type_password.send_keys(password)  # write your data in password button
        self.type_password.send_keys(Keys.RETURN)  # click Enter to login
        # find all Users Page
        self.all_users = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[1]/div[2]/span')
        self.all_users.click()  # click on the all users button
        # find create user page
        self.create_user = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[2]/button[2]')
        self.create_user.click()  # click on create user button
        # find the username field in create user Page
        self.type_username = self.driver.find_element_by_xpath('//*[@id="mat-input-5"]')
        self.type_username.send_keys(un[6])  # write the data of username in create user page
        self.type_pwd = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-6"]')  # find the password field in create user Page
        self.type_pwd.send_keys(pwd)  # write the data of password in create user page
        self.type_mail = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-7"]')  # find the mails field in create user Page
        self.type_mail.send_keys(mails)  # write the data of mails in create user page
        # find the checkbox of Role of the user you want to create inc create user page
        self.checkbox = self.driver.find_element_by_xpath('//*[@id="mat-radio-5"]/label')
        self.checkbox.click()  # click on the role you select
        self.type_mail.send_keys(Keys.RETURN)  # click enter to create the user
        # if condition to make sure from creating user by finding the pop up of succeeding creation of user
        try:
            if self.driver.find_element_by_xpath('//*[@id="Ellipse_1"]').is_displayed():
                print("success")
        except:
            print("fails")

    def test_space_between_2words(self):
        self.type_user = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-0"]')  # find the username field in login Page
        self.type_user.send_keys(user)  # write the username
        self.type_password = self.driver.find_element_by_xpath(
            '//*[@id="password"]')  # find the Password field in login Page
        self.type_password.send_keys(password)  # write your data in password button
        self.type_password.send_keys(Keys.RETURN)  # click Enter to login
        # find all Users Page
        self.all_users = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[1]/div[2]/span')
        self.all_users.click()  # click on the all users button
        # find create user page
        self.create_user = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[2]/button[2]')
        self.create_user.click()  # click on create user button
        # find the username field in create user Page
        self.type_username = self.driver.find_element_by_xpath('//*[@id="mat-input-5"]')
        self.type_username.send_keys(un[7])  # write the data of username in create user page
        self.type_pwd = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-6"]')  # find the password field in create user Page
        self.type_pwd.send_keys(pwd)  # write the data of password in create user page
        self.type_mail = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-7"]')  # find the mails field in create user Page
        self.type_mail.send_keys(mails)  # write the data of mails in create user page
        # find the checkbox of Role of the user you want to create inc create user page
        self.checkbox = self.driver.find_element_by_xpath('//*[@id="mat-radio-5"]/label')
        self.checkbox.click()  # click on the role you select
        self.type_mail.send_keys(Keys.RETURN)  # click enter to create the user
        # if condition to make sure from creating user by finding the pop up of succeeding creation of user
        try:
            if self.driver.find_element_by_xpath('//*[@id="Ellipse_1"]').is_displayed():
                print("success")
        except:
            print("fails")

    def test_oneword_with_symbols(self):
        self.type_user = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-0"]')  # find the username field in login Page
        self.type_user.send_keys(user)  # write the username
        self.type_password = self.driver.find_element_by_xpath(
            '//*[@id="password"]')  # find the Password field in login Page
        self.type_password.send_keys(password)  # write your data in password button
        self.type_password.send_keys(Keys.RETURN)  # click Enter to login
        # find all Users Page
        self.all_users = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[1]/div[2]/span')
        self.all_users.click()  # click on the all users button
        # find create user page
        self.create_user = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[2]/button[2]')
        self.create_user.click()  # click on create user button
        # find the username field in create user Page
        self.type_username = self.driver.find_element_by_xpath('//*[@id="mat-input-5"]')
        self.type_username.send_keys(un[8])  # write the data of username in create user page
        self.type_pwd = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-6"]')  # find the password field in create user Page
        self.type_pwd.send_keys(pwd)  # write the data of password in create user page
        self.type_mail = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-7"]')  # find the mails field in create user Page
        self.type_mail.send_keys(mails)  # write the data of mails in create user page
        # find the checkbox of Role of the user you want to create inc create user page
        self.checkbox = self.driver.find_element_by_xpath('//*[@id="mat-radio-5"]/label')
        self.checkbox.click()  # click on the role you select
        self.type_mail.send_keys(Keys.RETURN)  # click enter to create the user
        # if condition to make sure from creating user by finding the pop up of succeeding creation of user
        try:
            if self.driver.find_element_by_xpath('//*[@id="Ellipse_1"]').is_displayed():
                print("success")
        except:
            print("fails")

    def test_maxusername(self):
        self.type_user = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-0"]')  # find the username field in login Page
        self.type_user.send_keys(user)  # write the username
        self.type_password = self.driver.find_element_by_xpath(
            '//*[@id="password"]')  # find the Password field in login Page
        self.type_password.send_keys(password)  # write your data in password button
        self.type_password.send_keys(Keys.RETURN)  # click Enter to login
        # find all Users Page
        self.all_users = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[1]/div[2]/span')
        self.all_users.click()  # click on the all users button
        # find create user page
        self.create_user = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[2]/button[2]')
        self.create_user.click()  # click on create user button
        # find the username field in create user Page
        self.type_username = self.driver.find_element_by_xpath('//*[@id="mat-input-5"]')
        self.type_username.send_keys(maxun)  # write the data of username in create user page
        self.type_pwd = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-6"]')  # find the password field in create user Page
        self.type_pwd.send_keys(pwd)  # write the data of password in create user page
        self.type_mail = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-7"]')  # find the mails field in create user Page
        self.type_mail.send_keys(mails)  # write the data of mails in create user page
        # find the checkbox of Role of the user you want to create inc create user page
        self.checkbox = self.driver.find_element_by_xpath('//*[@id="mat-radio-5"]/label')
        self.checkbox.click()  # click on the role you select
        self.type_mail.send_keys(Keys.RETURN)  # click enter to create the user
        # if condition to make sure from creating user by finding the pop up of succeeding creation of user
        try:
            if self.driver.find_element_by_xpath('//*[@id="Ellipse_1"]').is_displayed():
                print("success")
        except:
            print("fails")

    def test_Click_without_Role(self):
        self.type_user = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-0"]')  # find the username field in login Page
        self.type_user.send_keys(user)  # write the username
        self.type_password = self.driver.find_element_by_xpath(
            '//*[@id="password"]')  # find the Password field in login Page
        self.type_password.send_keys(password)  # write your data in password button
        self.type_password.send_keys(Keys.RETURN)  # click Enter to login
        # find all Users Page
        self.all_users = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[1]/div[2]/span')
        self.all_users.click()  # click on the all users button
        # find create user page
        self.create_user = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[2]/button[2]')
        self.create_user.click()  # click on create user button
        # find the username field in create user Page
        self.type_username = self.driver.find_element_by_xpath('//*[@id="mat-input-5"]')
        self.type_username.send_keys(un[8])  # write the data of username in create user page
        self.type_pwd = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-6"]')  # find the password field in create user Page
        self.type_pwd.send_keys(pwd)  # write the data of password in create user page
        self.type_mail = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-7"]')  # find the mails field in create user Page
        self.type_mail.send_keys(mails)  # write the data of mails in create user page
        # find the checkbox of Role of the user you want to create inc create user page
        self.checkbox = self.driver.find_element_by_xpath('//*[@id="mat-radio-5"]/label')
        self.checkbox.click()  # click on the role you select
        self.type_mail.send_keys(Keys.RETURN)  # click enter to create the user
        # if condition to make sure from creating user by finding the pop up of succeeding creation of user
        try:
            if self.driver.find_element_by_xpath('//*[@id="Ellipse_1"]').is_displayed():
                print("success")
        except:
            print("fails")

    def test_min_password(self):
        self.type_user = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-0"]')  # find the username field in login Page
        self.type_user.send_keys(user)  # write the username
        self.type_password = self.driver.find_element_by_xpath(
            '//*[@id="password"]')  # find the Password field in login Page
        self.type_password.send_keys(password)  # write your data in password button
        self.type_password.send_keys(Keys.RETURN)  # click Enter to login
        # find all Users Page
        self.all_users = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[1]/div[2]/span')
        self.all_users.click()  # click on the all users button
        # find create user page
        self.create_user = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[2]/button[2]')
        self.create_user.click()  # click on create user button
        # find the username field in create user Page
        self.type_username = self.driver.find_element_by_xpath('//*[@id="mat-input-5"]')
        self.type_username.send_keys(un[0])  # write the data of username in create user page
        self.type_pwd = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-6"]')  # find the password field in create user Page
        self.type_pwd.send_keys(minpwd)  # write the data of password in create user page
        self.type_mail = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-7"]')  # find the mails field in create user Page
        self.type_mail.send_keys(mails)  # write the data of mails in create user page
        # find the checkbox of Role of the user you want to create inc create user page
        self.checkbox = self.driver.find_element_by_xpath('//*[@id="mat-radio-5"]/label')
        self.checkbox.click()  # click on the role you select
        self.type_mail.send_keys(Keys.RETURN)  # click enter to create the user
        # if condition to make sure from creating user by finding the pop up of succeeding creation of user
        try:
            if self.driver.find_element_by_xpath('//*[@id="Ellipse_1"]').is_displayed():
                print("success")
        except:
            print("fails")


    def test_max_password(self):
        self.type_user = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-0"]')  # find the username field in login Page
        self.type_user.send_keys(user)  # write the username
        self.type_password = self.driver.find_element_by_xpath(
            '//*[@id="password"]')  # find the Password field in login Page
        self.type_password.send_keys(password)  # write your data in password button
        self.type_password.send_keys(Keys.RETURN)  # click Enter to login
        # find all Users Page
        self.all_users = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[1]/div[2]/span')
        self.all_users.click()  # click on the all users button
        # find create user page
        self.create_user = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[2]/button[2]')
        self.create_user.click()  # click on create user button
        # find the username field in create user Page
        self.type_username = self.driver.find_element_by_xpath('//*[@id="mat-input-5"]')
        self.type_username.send_keys(un[0])  # write the data of username in create user page
        self.type_pwd = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-6"]')  # find the password field in create user Page
        self.type_pwd.send_keys(maxun)  # write the data of password in create user page
        self.type_mail = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-7"]')  # find the mails field in create user Page
        self.type_mail.send_keys(mails)  # write the data of mails in create user page
        # find the checkbox of Role of the user you want to create inc create user page
        self.checkbox = self.driver.find_element_by_xpath('//*[@id="mat-radio-5"]/label')
        self.checkbox.click()  # click on the role you select
        self.type_mail.send_keys(Keys.RETURN)  # click enter to create the user
        # if condition to make sure from creating user by finding the pop up of succeeding creation of user
        try:
            if self.driver.find_element_by_xpath('//*[@id="Ellipse_1"]').is_displayed():
                print("success")
        except:
            print("fails")


    def test_space_password(self):
        self.type_user = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-0"]')  # find the username field in login Page
        self.type_user.send_keys(user)  # write the username
        self.type_password = self.driver.find_element_by_xpath(
            '//*[@id="password"]')  # find the Password field in login Page
        self.type_password.send_keys(password)  # write your data in password button
        self.type_password.send_keys(Keys.RETURN)  # click Enter to login
        # find all Users Page
        self.all_users = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[1]/div[2]/span')
        self.all_users.click()  # click on the all users button
        # find create user page
        self.create_user = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[2]/button[2]')
        self.create_user.click()  # click on create user button
        # find the username field in create user Page
        self.type_username = self.driver.find_element_by_xpath('//*[@id="mat-input-5"]')
        self.type_username.send_keys(un[0])  # write the data of username in create user page
        self.type_pwd = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-6"]')  # find the password field in create user Page
        self.type_pwd.send_keys(pwd_space)  # write the data of password in create user page
        self.type_mail = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-7"]')  # find the mails field in create user Page
        self.type_mail.send_keys(mails)  # write the data of mails in create user page
        # find the checkbox of Role of the user you want to create inc create user page
        self.checkbox = self.driver.find_element_by_xpath('//*[@id="mat-radio-5"]/label')
        self.checkbox.click()  # click on the role you select
        self.type_mail.send_keys(Keys.RETURN)  # click enter to create the user
        # if condition to make sure from creating user by finding the pop up of succeeding creation of user
        try:
            if self.driver.find_element_by_xpath('//*[@id="Ellipse_1"]').is_displayed():
                print("success")
        except:
            print("fails")


    def test_InvalidMail(self):
        self.type_user = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-0"]')  # find the username field in login Page
        self.type_user.send_keys(user)  # write the username
        self.type_password = self.driver.find_element_by_xpath(
            '//*[@id="password"]')  # find the Password field in login Page
        self.type_password.send_keys(password)  # write your data in password button
        self.type_password.send_keys(Keys.RETURN)  # click Enter to login
        # find all Users Page
        self.all_users = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[1]/div[2]/span')
        self.all_users.click()  # click on the all users button
        # find create user page
        self.create_user = self.driver.find_element_by_xpath(
            '/html/body/app-root/div/section/app-admin/div/div/div/div/div[2]/button[2]')
        self.create_user.click()  # click on create user button
        # find the username field in create user Page
        self.type_username = self.driver.find_element_by_xpath('//*[@id="mat-input-5"]')
        self.type_username.send_keys(un[0])  # write the data of username in create user page
        self.type_pwd = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-6"]')  # find the password field in create user Page
        self.type_pwd.send_keys(pwd)  # write the data of password in create user page
        self.type_mail = self.driver.find_element_by_xpath(
            '//*[@id="mat-input-7"]')  # find the mails field in create user Page
        self.type_mail.send_keys(invalidmail)  # write the data of mails in create user page
        # find the checkbox of Role of the user you want to create inc create user page
        self.checkbox = self.driver.find_element_by_xpath('//*[@id="mat-radio-5"]/label')
        self.checkbox.click()  # click on the role you select
        self.type_mail.send_keys(Keys.RETURN)  # click enter to create the user
        # if condition to make sure from creating user by finding the pop up of succeeding creation of user
        try:
            if self.driver.find_element_by_xpath('//*[@id="Ellipse_1"]').is_displayed():
                print("success")
        except:
            print("fails")

    def tearDown(self):  # test fixture, to end the test
        self.driver.quit()  # close the browser window


if __name__ == '__main__':# execute the test

    unittest.main(testRunner=HtmlTestRunner.HTMLTestRunner(output="/home/farouk/Desktop/Selenium/",report_name="finals",report_title="UserName Test Cases",))  # Run the test
    #testRunner = HtmlTestRunner.HTMLTestRunner(output="./home/farouk/Desktop/Selenium/")
